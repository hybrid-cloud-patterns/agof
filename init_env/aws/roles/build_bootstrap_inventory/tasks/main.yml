---
- name: grab instance ids to tag each aap
  amazon.aws.ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:avp_aap": "{{ ec2_name_prefix }}-aap"
  register: aap_instance_info

- name: display aap_instance_info
  ansible.builtin.debug:
    msg: "{{ aap_instance_info }}"

- name: Add aap host to inventory
  ansible.builtin.add_host:
    groups:
      - 'aap_controllers'
      - 'aws_nodes'
    hostname: aap
    ansible_ssh_host: '{{ aap_instance_info.instances[0].public_dns_name }}'
    ansible_ssh_private_key_file: '{{ playbook_dir }}/{{ ec2_name_prefix }}/{{ ec2_name_prefix }}-private.pem'
    ansible_user: '{{ aws_ansible_user | default("ec2-user") }}'
    #ansible_remote_tmp: '{{ aws_remote_tmp | default("/home/ec2-user/.ansible/tmp") }}'
    ansible_remote_tmp: "{{ aws_remote_tmp | default('/home/ec2-user/.ansible/tmp') }}"
    short_hostname: 'aap'
    fqdn: 'aap.{{ ipa_server_domain }}'

- name: grab instance ids to tag each hub
  amazon.aws.ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:avp_hub": "{{ ec2_name_prefix }}-hub"
  register: hub_instance_info

- name: display hub_instance_info
  ansible.builtin.debug:
    msg: "{{ hub_instance_info }}"

- name: Add hub host to inventory
  ansible.builtin.add_host:
    groups:
      - 'automation_hub'
      - 'aws_nodes'
    hostname: hub
    ansible_ssh_host: '{{ aap_instance_info.instances[0].public_dns_name }}'
    ansible_ssh_private_key_file: '{{ playbook_dir }}/{{ ec2_name_prefix }}/{{ ec2_name_prefix }}-private.pem'
    ansible_user: '{{ aws_ansible_user | default("ec2-user") }}'
    #ansible_remote_tmp: '{{ aws_remote_tmp | default("/home/ec2-user/.ansible/tmp") }}'
    ansible_remote_tmp: "{{ aws_remote_tmp | default('/home/ec2-user/.ansible/tmp') }}"
    short_hostname: 'hub'
    fqdn: 'hub.{{ ipa_server_domain }}'

- name: Save facts for later
  ansible.builtin.set_fact:
    aap_instance: '{{ aap_instance_info.instances | first }}'
    hub_instance: '{{ hub_instance_info.instances | first }}'
    subnet_id: '{{ ec2_vpc_subnet_id }}'
    sg_id: '{{ create_sg.group_id }}'
