---
- name: "Provision {{ inst.name }} VM"
  block:
    - name: 'provision {{ inst.name }} server'
      amazon.aws.ec2_instance:
        name: "{{ ec2_name_prefix }}-{{ inst.name }}"
        network:
          assign_public_ip: true
        key_name: "{{ ec2_name_prefix }}-key"
        security_group: "{{ inst.security_group_id | default(ec2_security_group) }}"
        instance_type: "{{ inst.instance_type | default('m4.large') }}"
        image_id: "{{ inst.image_id | default(imagebuilder_ami) }}"
        region: "{{ inst.region_id | default(ec2_region) }}"
        state: running
        filters:
          instance-state-name: running
          "tag:avp": "{{ ec2_name_prefix }}"
          "tag:avpname": "{{ inst.name }}"
        tags:
          avp: "{{ ec2_name_prefix }}"
          uuid: "{{ ec2_name_prefix }}"
          guid: "{{ ec2_name_prefix }}"
          AWS_USERNAME: "{{ aws_user }}"
          owner: "{{ aws_user }}"
          Info: "AWS_USERNAME that provisioned this-> {{ aws_user }}"
          username: "{{ inst.username | default('ec2-user') }}"
          avpname: '{{ inst.name }}'
          avpfqdn: '{{ inst.name }}.{{ ec2_name_prefix|lower }}.{{ pattern_dns_zone }}'
          avpaliases: "{{ inst.host_aliases | default([]) | join(' ') }}"
        wait: "{{ ec2_wait }}"
        vpc_subnet_id: "{{ inst.vpc_subnet_id | default(ec2_vpc_subnet_id) }}"
        volumes:
          - device_name: /dev/sda1
            ebs:
              volume_type: "{{ inst.disk_volume_type | default('gp3') }}"
              volume_size: "{{ inst.disk_space | default(30) }}"
              iops: "{{ inst.disk_iops | default(3000) }}"
              throughput: "{{ inst.disk_throughput | default(125) }}"
              delete_on_termination: true
        ebs_optimized: "{{ ebs_optimized_capable | default(false) }}"
