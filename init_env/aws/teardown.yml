---
- name: Perform Checks to make sure this Playbook will complete successfully
  hosts: localhost
  connection: local
  become: false
  gather_facts: true
  vars_files:
    - "../../vars/main.yml"
    - "vars/aws_vars.yml"
    - "~/agof_vault.yml"
  tasks:
    - name: collection final check
      block:
        - name: run AWS check setup if using AWS
          include_role:
            name: roles/aws_check_setup
      rescue:
        - name: Error with setup
          fail:
            msg: The provisioner has failed during initial check_setup, please scroll up to see exact error.  Open an issue on https://github.com/ansible/workshops/issues

- name: "Get info on the elements built"
  hosts: localhost
  connection: local
  become: false
  gather_facts: false
  vars_files:
    - "~/agof_vault.yml"
    - "vars/aws_vars.yml"
  tasks:
    - name: "Retrieve info on built infrastructure"
      ansible.builtin.include_role:
        name: roles/manage_ec2_infra

    - name: "Get info on VMs and Remove DNS info"
      ansible.builtin.include_role:
        name: roles/manage_ec2_instances
      vars:
        teardown: true

    - name: "Remember instances for later"
      ansible.builtin.set_fact:
        built_instances: '{{ ec2_instances_built }}'

- name: Destroy instances in AWS
  hosts: localhost
  connection: local
  become: false
  gather_facts: false
  vars_files:
    - "~/agof_vault.yml"
    - "vars/aws_vars.yml"
  vars:
    ec2_wait: false
    teardown: true
    s3_state: absent
    state: absent
    debug_teardown: false

  tasks:
    - name: "Retrieve info on built infrastructure"
      ansible.builtin.include_role:
        name: roles/manage_ec2_infra

    - name: Remove route53 dns entries
      become: false
      community.aws.route53:
        state: absent
        zone: "{{ pattern_dns_zone }}"
        record: "{{ item.tags.avpfqdn }}"
        type: A
        wait: true
      when: manage_public_dns
      loop: "{{ built_instances }}"

    - name: Remove workshop local files
      file:
        dest: "{{ pattern_state_rootdir }}/{{ ec2_name_prefix }}"
        state: absent
