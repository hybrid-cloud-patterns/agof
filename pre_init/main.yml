---
- name: "Pre-initialization the environment - setting and verifying config"
  hosts: localhost
  connection: local
  become: false
  gather_facts: false
  vars_files:
    - "./vars/preinit_vars.yml"
    - "~/agof_vault.yml"
  tasks:
    - name: "Write ansible.cfg"
      ansible.builtin.template:
        src: ansible.cfg.j2
        dest: '../ansible.cfg'
        mode: '0600'

    - name: "Install collections for ansible environment {{ 'forcefully' if init_env_collection_install_force }}"
      when: init_env_collection_install
      block:
        - name: "Install local patched files"
          ansible.builtin.command:
            cmd: "ansible-galaxy collection install {{ '--force' if init_env_collection_install_force }} -p '{{ ansible_cfg_patch_collection_dir }}' '{{ item }}'"
            chdir: ".."
          loop: '{{ special_collection_installs }}'

        - name: "Install requirements file based collections {{ 'forcefully' if init_env_collection_install_force }}"
          ansible.builtin.command:
            cmd: |-
              ansible-galaxy collection install {{ '--force' if init_env_collection_install_force }} -p '{{ ansible_cfg_patch_collection_dir }}' -r requirements.yml
            chdir: ".."
          environment:
            ANSIBLE_GALAXY_SERVER_AUTOMATION_HUB_CERTIFIED_TOKEN: "{{ automation_hub_token }}"
            ANSIBLE_GALAXY_SERVER_AUTOMATION_HUB_VALIDATED_TOKEN: "{{ automation_hub_token }}"

    - name: "Assert that we have a valid target platform"
      ansible.builtin.assert:
        that:
          - agof_bootstrap_target | length > 0
          - agof_bootstrap_target in bootstrap_allowable_values
        fail_msg: "{{ agof_bootstrap_target }} is not a supported bootstrap target"
        success_msg: "Assertion passed: bootstrapping on {{ agof_bootstrap_target }}"

    - name: "Set our target bootstrap platform"
      ansible.builtin.set_fact:
        bootstrap_target: "{{ agof_bootstrap_target }}"
